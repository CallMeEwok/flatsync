rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read & update their own profile, and create a new user doc when signing up
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Fetching household members (ensures user belongs to the same household)
    match /users/{userId} {
      allow read: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId ==
        resource.data.householdId;
    }

    // Households - A user can only access the household they belong to
    match /households/{householdId} {
      allow read, update, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId == householdId;
      allow create: if request.auth != null;

      // ✅ Shopping List Rules (UNCHANGED)
      match /shoppingList/{itemId} {
        allow read, create, update, delete: if request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId == householdId;
      }

      // ✅ Expenses Rules (UNCHANGED)
      match /expenses/{expenseId} {
        allow read, create, update, delete: if request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId == householdId;
      }

      // ✅ Chores Rules (UNCHANGED)
      match /chores/{choreId} {
        allow read, create, update, delete: if request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId == householdId;
      }

      // ✅ Message Board Rules (NEWLY ADDED)
      match /messages/{messageId} {
        // Allow users to read messages only if they belong to the household
        allow read: if request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId == householdId;

        // Allow users to send messages only if they belong to the household
        allow create: if request.auth != null &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId == householdId;

        // Allow users to delete messages ONLY IF they sent them
        allow delete: if request.auth != null &&
          get(/databases/$(database)/documents/households/$(householdId)/messages/$(messageId)).data.senderId == request.auth.uid;
      }
    }

    // ✅ Invite System Rules (UNCHANGED & RE-ADDED)
    match /invites/{inviteId} {
      // Allow read access to invites only if authenticated
      allow read: if request.auth != null;

      // Allow creating an invite only if:
      // - The user exists
      // - The user has a household assigned (to avoid null errors)
      // - The household exists
      allow create: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId != null &&
        exists(/databases/$(database)/documents/households/$(get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId));

      // Allow deleting an invite if:
      // - The invite exists
      // - The user making the request belongs to the same household as the invite
      allow delete: if request.auth != null &&
        exists(/databases/$(database)/documents/invites/$(inviteId)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId ==
        get(/databases/$(database)/documents/invites/$(inviteId)).data.householdId;

      // ✅ Allow updating invite when a user accepts it (marks as used)
      allow update: if request.auth != null &&
        exists(/databases/$(database)/documents/invites/$(inviteId)) &&
        get(/databases/$(database)/documents/invites/$(inviteId)).data.used == false;
    }
  }
}
